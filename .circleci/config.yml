# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  docker: circleci/docker@2.2.0
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  test:
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run: dotnet test --logger "trx" ~/project/tests/Pan.Affiliation.UnitTests --results-directory ~/project/tests/results
      - run:
          name: test results
          when: always
          command: |
              dotnet tool install -g trx2junit &&
              export PATH="$PATH:/root/.dotnet/tools" &&
              trx2junit ~/project/tests/results/*.trx
      - store_test_results:
          path: ~/project/tests/results
  deploy-staging:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
        - run:
            name: Deploy to VPS
            command: |
              ssh $SSH_USER@$SSH_HOST "docker ps -a -q --filter name=$DOCKER_IMG_NAME | grep -q . && docker stop $DOCKER_IMG_NAME && docker rm -f $DOCKER_IMG_NAME || echo Skipped && docker rmi -f $DOCKER_HUB_USERNAME/$DOCKER_IMG_NAME && docker run -p $API_PORT:80 -d --name $DOCKER_IMG_NAME $DOCKER_HUB_USERNAME/$DOCKER_IMG_NAME"
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - test
      - docker/publish:
          requires:
            - test
          context:
            - PAN_AFFILIATION_API_STG 
          deploy: true 
          image: $DOCKER_HUB_USERNAME/$DOCKER_IMG_NAME
          docker-password: DOCKER_HUB_PASSWORD
          docker-username: DOCKER_HUB_USERNAME
          lint-dockerfile: false 
          remote-docker-dlc: false 
          treat-warnings-as-errors: false 
          update-description: false 
          use-docker-credentials-store: false 
          use-remote-docker: false 
          tag: $CIRCLE_SHA1,latest
      - deploy-staging:
          context:
            - PAN_AFFILIATION_API_STG
          requires:
            - docker/publish